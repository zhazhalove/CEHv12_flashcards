{
  "Chapter 5": [
    {
      "Front": "Vulnerability Assessment Models: Product-Based Method",
      "Back": "A product-based method involves installing vulnerability scanning software locally within an organization's environment. Examples include Tenable, GFI Landguard, and OpenVAS."
    },
    {
      "Front": "Vulnerability Assessment Models: Service-Based Method",
      "Back": "A service-based method uses a third-party to conduct vulnerability assessments. This method can perform both internal and external assessments, offering more capabilities."
    },
    {
      "Front": "Vulnerability Assessment Strategies: Tree-Based",
      "Back": "A tree-based strategy involves running multiple customized scans designed for specific targets like hosts, services, databases, or web applications."
    },
    {
      "Front": "Vulnerability Assessment Strategies: Inference-Based",
      "Back": "An inference-based strategy begins with a broad scan to discover assets. It uses the discovered information to infer the next steps in the scan."
    },
    {
      "Front": "Types of Vulnerability Assessment Tools: Host-Based",
      "Back": "Host-based tools are installed on specific hosts and focus on their vulnerabilities, such as the OS and running services. Examples include Nessus."
    },
    {
      "Front": "Types of Vulnerability Assessment Tools: Depth Assessment",
      "Back": "Depth assessments look for new, unknown vulnerabilities through processes like fuzzing. They can discover denial of service or remote code execution vulnerabilities."
    },
    {
      "Front": "Types of Vulnerability Assessment Tools: Application Layer",
      "Back": "Application layer tools scan web applications for vulnerabilities. Examples include Nikto, Skipfish, Acunetix, and Arachne."
    },
    {
      "Front": "Types of Vulnerability Assessment Tools: Mobile",
      "Back": "Mobile assessment tools scan mobile applications for vulnerabilities, focusing on apps rather than the phone itself. An example is the Quick Android Review Kit (Quark)."
    },
    {
      "Front": "Types of Vulnerability Assessment Tools: Location and Data Examination Tools",
      "Back": "These include network-based, agent-based, proxy, and cluster scanners, which scan hosts and networks in various configurations."
    },
    {
      "Front": "Vulnerability Management Lifecycle: Pre-Assessment Phase",
      "Back": "This phase involves defining the assessment's scope, managing assets, and identifying security controls before starting the actual scan."
    },
    {
      "Front": "Vulnerability Management Lifecycle: Assessment Phase",
      "Back": "This phase includes performing the scan, validating results, and generating reports. Tools like Nessus and Qualys are used for digital scans."
    },
    {
      "Front": "Vulnerability Management Lifecycle: Post-Assessment Phase",
      "Back": "This phase involves risk assessment, remediation, root cause analysis, and training. Verification through rescanning is also performed."
    },
    {
      "Front": "Vulnerability Classifications: Misconfigurations",
      "Back": "Misconfigurations include leaving default settings or actively creating insecure configurations. These are often easy to detect."
    },
    {
      "Front": "Vulnerability Classifications: Missing Patches and Updates",
      "Back": "Missing patches and updates leave software vulnerable to known exploits. Scanners identify outdated software by comparing versions."
    },
    {
      "Front": "Vulnerability Classifications: Application Flaws",
      "Back": "Application flaws are coding errors found in web applications or software. Tools like SAST and DAST identify insecure coding practices."
    },
    {
      "Front": "Vulnerability Classifications: Cloud Vulnerabilities",
      "Back": "Cloud vulnerabilities include misconfigurations, insecure APIs, and access control issues, which expand the attack surface."
    },
    {
      "Front": "Vulnerability Classifications: Buffer Overflows",
      "Back": "Buffer overflows occur when a program receives more input than it can handle, leading to crashes or remote code execution."
    },
    {
      "Front": "Vulnerability Classifications: Denial of Service (DoS)",
      "Back": "DoS attacks attempt to make systems unavailable by crashing or overwhelming them. They are classified as vulnerabilities."
    },
    {
      "Front": "Vulnerability Classifications: Logic Flaws",
      "Back": "Logic flaws occur in the business logic or design flow of an application, allowing unintended actions or bypasses."
    },
    {
      "Front": "Types of Vulnerability Assessments: Active vs. Passive",
      "Back": "Active assessments involve engaging with the target, while passive assessments monitor without interaction."
    },
    {
      "Front": "Types of Vulnerability Assessments: External vs. Internal",
      "Back": "External assessments simulate external attacks, while internal assessments simulate insider threats within the network."
    },
    {
      "Front": "Types of Vulnerability Assessments: Host-Based vs. Network-Based",
      "Back": "Host-based assessments focus on individual devices, while network-based assessments evaluate the network infrastructure."
    },
    {
      "Front": "Types of Vulnerability Assessments: Application Assessments",
      "Back": "Application assessments test web and software applications for coding errors, insecure practices, and outdated versions."
    },
    {
      "Front": "Types of Vulnerability Assessments: Database Assessments",
      "Back": "Database assessments analyze database configurations and software security, identifying vulnerabilities and outdated versions."
    },
    {
      "Front": "Types of Vulnerability Assessments: Wireless Assessments",
      "Back": "Wireless assessments identify vulnerabilities in wireless networks, including insecure SSIDs and Pre-Shared Keys (PSKs)."
    },
    {
      "Front": "Types of Vulnerability Assessments: Credentialed vs. Non-Credentialed",
      "Back": "Credentialed assessments use login credentials to identify more vulnerabilities, while non-credentialed assessments do not require credentials."
    },
    {
      "Front": "Types of Vulnerability Assessments: Manual vs. Automated",
      "Back": "Manual assessments involve human inspection, while automated assessments use tools to generate reports and find vulnerabilities."
    },
    {
      "Front": "Vulnerability Assessment Reports: General Attributes",
      "Back": "Reports detail the scope, scan results, vulnerabilities, and severity levels, often including links for further information."
    },
    {
      "Front": "Vulnerability Assessment Reports: Nikto Example",
      "Back": "Nikto reports include server info, URIs, HTTP methods, and vulnerabilities found. The output can be converted to HTML for readability."
    },
    {
      "Front": "Vulnerability Assessment Reports: OpenVAS Example",
      "Back": "OpenVAS reports provide vulnerability details, severity levels, CVSS scores, and remediation recommendations, along with scan histories."
    },
    {
      "Front": "Vulnerability Assessment Reports: Executive Summary",
      "Back": "An executive summary is a non-technical overview for decision-makers, summarizing findings, risks, and mitigation strategies."
    }
  ]
}
